<?xml version="1.0" encoding="UTF-8"?>
<cherrytree>
  <node unique_id="1" master_id="0" name="EJERCICIOS_COMANDO_LINUX" prog_lang="custom-colors" tags="" readonly="0" nosearch_me="0" nosearch_ch="0" custom_icon_id="0" is_bold="1" foreground="#33d17a" ts_creation="1733324061" ts_lastsave="1733333109">
    <rich_text>
</rich_text>
    <rich_text scale="h1" background="#f6d32d" foreground="#000000" weight="heavy">TOKEN DE GIT PARA CONECTAR REPO CON EL SHELL</rich_text>
    <rich_text>
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


</rich_text>
    <rich_text scale="h3" weight="heavy">1. Listar todos los archivos del directorio bin.</rich_text>
    <rich_text>
ls /bin
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">2. Listar todos los archivos del directorio tmp.</rich_text>
    <rich_text>
ls /tmp
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">3. Listar todos los archivos del directorio etc que empiecen por t en orden inverso.</rich_text>
    <rich_text>
ls –r /etc/t*
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">4. Listar todos los archivos del directorio dev que empiecen por tty y tengan 5 caracteres.</rich_text>
    <rich_text>
ls /dev/tty??
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">5. Listar todos los archivos del directorio dev que empiecen por tty y acaben en 1,2,3 ó 4.</rich_text>
    <rich_text>
ls /dev/tty*[1-4]
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">6. Listar todos los archivos del directorio dev que empiecen por t y acaben en C1.</rich_text>
    <rich_text>
ls /dev/t*c1
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">7. Listar todos los archivos, incluidos los ocultos, del directorio raíz.</rich_text>
    <rich_text>
ls –a /
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">8. Listar todos los archivos del directorio etc que no empiecen por t.</rich_text>
    <rich_text>
ls –d /etc/[^t]*
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">9. Listar todos los archivos del directorio usr y sus subdirectorios.</rich_text>
    <rich_text>
ls –R /usr
g</rich_text>
    <rich_text style="italic">enera un resultado en pantalla enorme de directorios y archivos (no vale la pena poner captura de pantalla)</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">10. Cambiarse al directorio tmp, crear directorio PRUEBA.</rich_text>
    <rich_text>
cd /tmp mkdir PRUEBA
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">11. Verificar que el directorio actual ha cambiado.</rich_text>
    <rich_text>
pwd
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>
</rich_text>
    <rich_text scale="h3" weight="heavy">12. Mostrar el día y la hora actual.</rich_text>
    <rich_text>
date
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">13. Con un solo comando posicionarse en el directorio $HOME.</rich_text>
    <rich_text>
cd /home
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">14. Verificar que se está en él.</rich_text>
    <rich_text>
pwd
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>
</rich_text>
    <rich_text scale="h3" weight="heavy">15. Listar todos los ficheros del directorio HOME mostrando su número de inodo.</rich_text>
    <rich_text>
ls -i
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">16. Borrar todos los archivos y directorios visibles de vuestro directorio PRUEBA.</rich_text>
    <rich_text>
rm -rf PRUEBA/*
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">17. Crear los directorios dir1, dir2 y dir3 en el directorio PRUEBA. Dentro de dir1 crear el directorio dir11. Dentro del directorio dir3 crear el directorio dir31. Dentro del directorio dir31, crear los directorios</rich_text>
    <rich_text scale="h3"> </rich_text>
    <rich_text scale="h3" weight="heavy">dir311 y dir312.</rich_text>
    <rich_text>
mkdir PRUEBA/dir1
mkdir PRUEBA/dir1/dir11
mkdir PRUEBA/dir2
mkdir PRUEBA/dir3
mkdir PRUEBA/dir3/dir31
mkdir PRUEBA/dir3/dir31/dir311
mkdir PRUEBA/dir3/dir31/dir312
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">18. Copiar el archivo /etc/motd a un archivo llamado mensaje de vuestro directorio PRUEBA.</rich_text>
    <rich_text>
sudo touch /etc/motd PRUEBA/mensaje
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">19. Copiar mensaje en dir1, dir2 y dir3.</rich_text>
    <rich_text>
cd PRUEBA
cp mensaje dir1/mensaje &amp;&amp; cp mensaje dir2/mensaje &amp;&amp; cp mensaje dir3/mensaje
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">20. Comprobar el ejercicio anterior mediante un solo comando.</rich_text>
    <rich_text>
ls -R PRUEBA
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">21. Copiar los archivos del directorio rc.d que se encuentra en /etc al directorio dir31.</rich_text>
    <rich_text>
cp -r /etc/rc.d dir31
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">22. Copiar en el directorio dir311 los archivos de /bin que tengan una a como segunda letra y su nombre tenga cuatro letras.</rich_text>
    <rich_text>
cp -r /bin/?a?? PRUEBA/dir3/dir31/dir311
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">23. Copiar el directorio de otro usuario y sus subdirectorios debajo de dir11 (incluido el propio directorio).</rich_text>
    <rich_text>
sudo cp -r ../usuario2 PRUEBA/dir1/dir11
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>       </rich_text>
    <rich_text background="#e01b24">ESTO TENGO QUE COMPROBAR PORQUE NO FUNCIONA</rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">24. Mover el directorio dir31 y sus subdirectorios debajo de dir2.</rich_text>
    <rich_text>
mv PRUEBA/dir3/dir31 PRUEBA/dir2
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">25. Mostrar por pantalla los archivos ordinarios del directorio HOME y sus subdirectorios.</rich_text>
    <rich_text>
ls -R $HOME
</rich_text>
    <rich_text style="italic">con el comando anterior se crea un listado tan grande de directorios que no vale la pena incluir una imagen </rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">26. Ocultar el archivo mensaje del directorio dir3.</rich_text>
    <rich_text>
mv PRUEBA/dir3/mensaje PRUEBA/dir3/.mensaje
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">27. Borrar los archivos y directorios de dir1, incluido el propio directorio.</rich_text>
    <rich_text>
rm -rf PRUEBA/dir1
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">28. Copiar al directorio dir312 los ficheros del directorio /dev que empiecen por t, acaben en una letra que vaya de la a a la b y tengan cinco letras en su nombre.</rich_text>
    <rich_text>
cp /dev/t???[a*b] /home/ubuntu/PRUEBA/dir3/dir31/dir312
</rich_text>
    <rich_text justification="left"></rich_text>
    <rich_text>

</rich_text>
    <rich_text scale="h3" weight="heavy">29. Borrar los archivos de dir312 que no acaben en b y tengan una q como cuarta letra.</rich_text>
    <rich_text>
rm -r PRUEBA/dir2/dir31/dir312/???q[^b]


</rich_text>
    <rich_text scale="h3" weight="heavy">30. Mover el directorio dir312 debajo de dir3.</rich_text>
    <rich_text>
mv PRUEBA/dir2/dir31/dir312 PRUEBA/dir3


</rich_text>
    <rich_text scale="h3" weight="heavy">31. Crear un enlace simbólico al directorio dir1 dentro del directorio dir3 llamado enlacedir1.</rich_text>
    <rich_text>
ln -s /home/ubuntu/PRUEBA/dir1 PRUEBA/dir3/enlacedir1


</rich_text>
    <rich_text scale="h3" weight="heavy">32. Posicionarse en dir3 y, empleando el enlace creado en el ejercicio anterior, crear el directorio nuevo1 dentro de dir1.</rich_text>
    <rich_text>
cd dir3 mkdir enlacedir1/nuevo1

33. Utilizando el enlace creado copiar los archivos que empiecen por u del directorio /bin en directorio nuevo1.
cp -r /bin/u* enlacedir1/nuevo1/
34. Crear dos enlaces duros del fichero fich1, llamarlo enlace, en los directorios dir1 y dir2.
ln fich1 dir1/enlace ln fich1 dir2/enlace
35. Borrar el archivo fich1 y copiar enlace en dir3.
rm fich1 cp dir1/enlace dir3/
36. Crear un enlace simbólico (llamado enlafich1) al fichero enlace de dir2 en dir1.
ln -s /home/ubuntu/PRUEBA/dir2 /home/ubuntu/PRUEBA/dir1/enlafich1
37. Posicionarse en dir1 y, mediante el enlace creado, copiar el archivo fichl dentro de dir311.
cd dir1 cp enlafich1 ../dir2/dir31/dir311/fich1
38. Seguir en dir1 y, mediante el enlace creado, sacar por pantalla las líneas que tiene el archivo fich1.
cat enlafich1
39. Borrar el fichero fich1 de dir2.
rm dir2/fich1
40. Borrar todos los archivos y directorios creados durante los ejercicios. rm -r *
41. Crear el directorio dir2 y dir3 en el directorio PRUEBA ¿Cuáles son los actuales permisos del directorio dir2?
mkdir dir1 mkdir dir2 ls -l
42. Utilizando la notación simbólica, eliminar todos los permisos de escritura (propietario, grupo, otros) del directorio dir2.
chmod 555 dir2
43. Utilizando la notación octal, eliminar el permiso de lectura del directorio dir2, al resto de los usuarios.
chmod 551 dir2
44. ¿Cuáles son ahora los permisos asociados a dir2?
ls -l
45. Crear bajo dir2, un directorio llamado dir2l.
mkdir dir2/dir21 no se puede crear perniso denegado
46. Concederse a sí mismo permiso de escritura en el directorio dir2 e intentar de nuevo el paso anterior.
chmod 751 dir2 mkdir dir2/dir21
47. ¿Cuáles son los valores por omisión asignados a los archivos?
ls -l dir2
48. Cambiar el directorio actual al directorio dir3. Imprimir su trayectoria completa para verificar el cambio.
cd .. cd dir3 ls -lR
49. ¿Cuáles son los permisos asignados en su momento a este directorio?
ls -lR
50. Reiniciar el ordenador.
reboot
51. Crear cuatro nuevos directorios llamados dira, dirb, dirc, y dird bajo el directorio actual.
mkdir dira mkdir dirb mkdir dirc mkdir dird
52. Comprobar los permisos de acceso de los directorios recién creados para comprobar el funcionamiento del comando umask.
ls -l
53. Crear el fichero uno . Quitarle todos los permisos de lectura. Comprobarlo. Intentar borrar dicho fichero.
touch uno chmod a-r uno ls -l rm uno
54. Quitarle todos los permisos de paso al directorio dir2 y otorgarle todos los demás.
chmod = dir2 chmod o=rwx dir2
55. Crear en el directorio propio:
El directorio carpeta1 con los tres permisos para el propietario, dentro de él fich1 con lectura y escritura para todos y fich2 con lectura y escritura para el propietario y solo lectura para el resto.
El directorio carpeta2 con todos los permisos para el propietario y lectura y ejecución para los del mismo grupo. Dentro file1 con lectura y escritura para el propietario y los del grupo y file2 con los mismos para el propietario y solo lectura para el grupo.
mkdir carpeta1 chmod u=rwx,g=,o= carpeta1 touch carpeta1/fich1 touch carpeta1/fich2 chmod = carpeta1/fich1 chmod = carpeta1/fich2 chmod o=rw carpeta1/fich1 ls -l
</rich_text>
    <rich_text scale="h3">mkdir carpeta2 chmod u=rwx,g=rx,o= carpeta2 touch carpeta2/file1 touch carpeta2/file2 chmod = carpeta2/file2 chmod = carpeta2/file1 chmod u=rw,g=rw carpeta2/file1 chmod u=rw,g=r carpeta2/file2 ls -l</rich_text>
    <rich_text>
1. Desde otro usuario probar todas las operaciones que se pueden hacer en los ficheros y directorios creados.
ls -lR
2. Visualizar la trayectoria completa del directorio actual. Crear dos directorios llamados correo y fuentes debajo del directorio actual.
mkdir correo mkdir fuentes
3. Posicionarse en el directorio fuentes y crear los directorios dir1, dir2, dir3.
cd fuentes mkdir dir1 mkdir dir2
4. Crear el directorio menus bajo correo sin moverse del directorio actual.
mkdir ../correo/menus
5. Posicionarse en el directorio HOME. Borrar los directorios que cuelgan de fuentes que acaben en un número que no sea el 1.
cd $HOME
6. Ver si existe el archivo tty2 en el directorio dev. En caso de que exista, ver su fecha de creación o actualización.
find PRUEBA/fuentes -type d -name "tty2" -exec ls -l {} ;
7. Ver los permisos que tienen los archivos que empiecen por tt del directorio /dev.
ls -l /dev/tt*
8. Visualizar la lista de los archivos ordinarios que están en el directorio /usr/bin.
find /usr/bin -type d -name "*" -exec ls -l {} ;
9. Visualizar la lista de todos los directorios que cuelgan del raíz.
find / -type d -name "*" -exec ls {} ;
10. Visualizar la lista de todos los ficheros que pertenezcan a root.
find / -user root -type f
11. Visualizar la lista de todos los ficheros .h del directorio /usr/include.
find /usr/include -type f -regex ".*.h"
12. Ejecutar todos los comandos que empiecen por ls del directorio /bin.
ls /bin/ls*
13. Visualizar de qué tipo son todos y cada uno de ficheros de todo el árbol del sistema propiedad de un usuario conocido.
find /home/ubuntu -exec file --mime-type -0 '{}' ;
14. Crear el directorio uno en el directorio HOME con permiso de escritura y paso para el propietario, de lectura y paso para los usuarios de su mismo grupo y ningún permiso para el resto de usuarios.
mkdir uno chmod u=rw,g=rw,o= uno ls -ld uno
15. Crear el directorio uno1 dentro del directorio creado en el ejercicio anterior con todos lo permisos para el usuario, ninguno para los usuarios del grupo y permiso de escritura para el resto de usuarios.
chmod u=rwx,g=rwx,o= uno mkdir uno/uno1 chmod u=rwx,g=,o=w uno/uno1 ls -ld uno/uno1
16. Copiar todos los ficheros propiedad de un usuario conocido que acaben en un número en el directorio menus.
find /home/usuario2 -type f -regex ".*[0-9]" -exec cp -r '{}' PRUEBA/correo/menus/ ;
17. Visualiza con la orden who la relación de usuarios conectados y sus terminales. Mediante la orden cat, crea un pequeño mensaje desde tu consola y redirígelo a uno de los terminales conectados.
sudo -s
18. Crea un archivo de tamaño 0
touch archivo_tamaño_cero
19. Visualiza el archivo /etc/motd, que contiene el "mensaje del día".
cat /etc/motd
20. Utilizando de entrada la información de los usuarios conectados al sistema, guardar, ordenadas por el campo hora, las líneas correspondientes al usuario que se desee en el archivo persona.
who | grep $USER | sort -k 4 &gt; persona
21. Crear el directorio carpeta debajo del directorio PRUEBA. Quitarle todos los permisos de lectura. A continuación, buscar todos los directorios que cuelguen del directorio propio y guardarlos en el archivo direc.
mkdir carpeta chmod a-r carpeta find ~ -type d &gt; direc
22. Volver a realizar la segunda parte del ejercicio anterior, pero redireccionando los errores al fichero malos. Comprobar la información del fichero malos.
find ~ -type d 2&gt; malo
23. Añadir al fichero direc la lista de todos los ficheros ordinarios que cuelguen de /etc.
find /etc -type f &gt;&gt; direc
24. Añadir al archivo nuevalista el/los nombre/s de el/los fichero/s del directorio PRUEBA que contengan en su nombre la cadena "ai", añadiendo el posible error al fichero malos.
find ./ -type f -not -iname </rich_text>
    <rich_text style="italic">ai</rich_text>
    <rich_text> 1&gt; nuevalista 2&gt; malos find ./ -type f -iname </rich_text>
    <rich_text style="italic">ai</rich_text>
    <rich_text> 1&gt; nuevalista 2&gt; malos
25. Sacar por pantalla únicamente el tiempo (buscar comando time) que tarda en ejecutarse el comando who.
time 'sleep 3' time who -p %e
26. Sacar por pantalla un listado completo (buscar comando ps) de los procesos que está realizando el usuario root.
ps -U root -u root u
27. Crear el archivo proceso con los procesos que no tienen ningún terminal asignado.
ps -U root -u root u | grep -v "'ls /dev'"
28. Añadir al fichero anterior la fecha actual y la trayectoria completa del directorio actual.
echo "'date +"%A %D"' - 'pwd'" &gt;&gt;nuevalista
29. Sacar por pantalla el listado de todos los usuarios conectados ordenados por número de proceso asignado.
ps axu
30. Averiguar cuál es la actividad actual del sistema. Para ello visualice un listado completo del estado de todos los procesos que se están ejecutando en el sistema.
top -d 1 -n 10
31. Obtener un listado con los siguientes datos de los procesos de su shell actual.
ps -e
32. Mostrar cuantos usuarios tiene registrados el sistema (el registro de usuarios está en el archivo /etc/passwd)
cat /etc/passwd | wc -l
33. Mostrar cuántos usuarios tiene registrados el sistema y que utilizan el intérprete bash (debe aparecer al final de la línea /bin/bash o similar)
cat /etc/passwd | grep bash
34. Mostrar cuantos usuarios hay conectados
who -q
35. Mostrar las líneas, de un archivo de texto, empiecen por L (mayúscula o minúscula)
man gcc &gt; gcc.man_page cat gcc.man_page | sed -e 's/ //g' &gt; file.filled cat file.filled | grep ^[Ll]
36. Contar las líneas, del ejemplo anterior
cat file.filled | grep ^[Ll] | wc -l
37. Extraer los nombres de usuario (primer campo) del sistema
cat /etc/passwd | cut -d ':' -f 1
38. Extraer los nombres de usuario y el shell que utilizan (último campo)
gawk -F: '{print $1, $7}' /etc/passwd
39. Cambiar la fecha de creación de un archivo ya previamente creado
touch -t 8810011101 good ls -l good
40. Calcular la firma md5 de un archivo
md5sum good
41. Modificar la firma md5 y detectar que se ha cambiado (revisión de firma)
md5sum -c good.MD5 md5sum good md5sum -c good.MD5 md5sum good
42. Monitorear la ocupación de las particiones en los discos
df -lh
43. ¿Cual es el proceso que más carga el procesador?
for x in </rich_text>
    <rich_text family="monospace">seq 1 10</rich_text>
    <rich_text>; do ps -eo pid,pcpu,pmem,user,args | sort -r -k 2 | head -n 2; sleep 3; done
44. ¿Está corriendo el proceso bash?
ps -eo pid,pcpu,pmem,user,args | grep bash ps a | grep bash
45. ¿Cuántos procesos que empiecen por k están corriendo?
ps -eo args | cut -d ' ' -f 1 | grep ^g | wc -l
</rich_text>
    <encoded_png char_offset="146" justification="left" link="" sha256sum="e59dc0a6413c62fc49c2a8f14558f2f033f6e0361fa4c2a485fc844b938b0e39"/>
    <encoded_png char_offset="206" justification="left" link="" sha256sum="50c644c6685387d0ede6efd84a68849bea841941aac322bf3359b08011f263ab"/>
    <encoded_png char_offset="308" justification="left" link="" sha256sum="b1dc1f37339c448f6334da4c1fab098936ffa988d6ff48e0fc4d9f3182b68190"/>
    <encoded_png char_offset="417" justification="left" link="" sha256sum="76550888856645dceda162210ab85ba199365a6a8dd16f7f9b74b5defc400910"/>
    <encoded_png char_offset="530" justification="left" link="" sha256sum="fc543f999f8410850dc68099c429fff058b0e64ed2a1cc242fcb0008973404df"/>
    <encoded_png char_offset="629" justification="left" link="" sha256sum="70238e103d6012e2ad89e6dcc36864f2658885c2186d01681876c5afe87f7f91"/>
    <encoded_png char_offset="714" justification="left" link="" sha256sum="78fb23a50eb696693eeb33d19af3dcbe17f33ab9c3229887f46b4d55afe44f23"/>
    <encoded_png char_offset="805" justification="left" link="" sha256sum="1786f59723c0d94e3cf2718a5a56eda634307b1d039fe37c33b3ff62b7a704e7"/>
    <encoded_png char_offset="1078" justification="left" link="" sha256sum="7fcd46ca7cc3ddaa8b2e98a315b2a37f4538df7394524e8c36b0f6c2d0530261"/>
    <encoded_png char_offset="1137" justification="left" link="" sha256sum="b9477721a4dcc8ac868074391114f1ebd87b47091f110b007ec676d0876aad73"/>
    <encoded_png char_offset="1181" justification="left" link="" sha256sum="6522159965a77785134002de5eac107008792a2062566bdae985a2b339a64364"/>
    <encoded_png char_offset="1254" justification="left" link="" sha256sum="4ad9aff88041ff99d1832a7055aca3c70a8933863d892184629b45cfbbd0decb"/>
    <encoded_png char_offset="1294" justification="left" link="" sha256sum="8f35f513904f5b9a5576f76fc30bc2342058b6ae4dfa1c18bacdea0b83380b59"/>
    <encoded_png char_offset="1382" justification="left" link="" sha256sum="04542f5fb70b8aa9747f2e0dc87f165724c5fd7a75712b69050d239ae7be3cc8"/>
    <encoded_png char_offset="1484" justification="left" link="" sha256sum="11899308d7c74e16b152ddc6ec16868036f6689f590e2c5342142c6a4ac625fb"/>
    <encoded_png char_offset="1884" justification="left" link="" sha256sum="b093cb06c422d4558daed95673bf1ee8316e61a1db4690b1bfe24da8de8fa6c3"/>
    <encoded_png char_offset="1886" justification="left" link="" sha256sum="e4da5e419ee41da4cd378e05a552f721978f5c74f52c044a5b2949e5671f691f"/>
    <encoded_png char_offset="1888" justification="left" link="" sha256sum="34019b08f91b36b5cb05f98899202c69303537be14a0dbed5ac49dbf05028cf2"/>
    <encoded_png char_offset="2018" justification="left" link="" sha256sum="ebb314aa54bc6bef9a3156bae9b605b5163801cbb99bc627acca28f31b7aa268"/>
    <encoded_png char_offset="2150" justification="left" link="" sha256sum="db7584d2567c4e9582b3448930941da1a7ffec0c62a802fcaa88d96586bb3bca"/>
    <encoded_png char_offset="2152" justification="left" link="" sha256sum="8e1fe8dbb9b058aba0a608d35bcc9b99e157de02e5121b3b7ea006c0d769b981"/>
    <encoded_png char_offset="2230" justification="left" link="" sha256sum="212153b6f42668b692cf2a04a5fb00b9e3b10df392f197b87e4962b8ff7cd59e"/>
    <encoded_png char_offset="2345" justification="left" link="" sha256sum="bb0457964e20713df2ce9342d3391fee34e9b866ccbc60e1928d299d88bf606f"/>
    <encoded_png char_offset="2514" justification="left" link="" sha256sum="b06e494748dd16e1d6edf05542c2964cb550900f43bd4be9d74fef8116c9076f"/>
    <encoded_png char_offset="2669" justification="left" link="" sha256sum="cca3c06091bdc593f9cbf81826a2b1b39bf5f48796aef90ae9f7312cd6d05840"/>
    <encoded_png char_offset="2822" justification="left" link="" sha256sum="70f70854679e07c99a8d5b6ab6f26c99f32253ef94d0ac09e2ace3f11400b44f"/>
    <encoded_png char_offset="3134" justification="left" link="" sha256sum="227b952965588e020f0ef433344873437958cd1dff92cde92db7f5cd475d2d8d"/>
    <encoded_png char_offset="3234" justification="left" link="" sha256sum="27374d951698f9c71225fbc5802b3bf86a3e129a5df206dac18fc28c26aea512"/>
    <encoded_png char_offset="3458" justification="left" link="" sha256sum="057718f741494447f16263818a500e859202c67fb3e67498cefffe48eede5430"/>
    <encoded_png char_offset="3588" justification="left" link="" sha256sum="3ef429e926570e7f3643bab3be607c52c1d7391d24988c77891682b7c2d4c2ab"/>
    <encoded_png char_offset="3678" justification="left" link="" sha256sum="78d50f64e456055f0c81c0de22440db618f69919a26a4f83d65cab4068c0f46e"/>
  </node>
</cherrytree>
